apply plugin: 'com.android.application'
// 依赖插件脚本
apply from: 'tinker-support.gradle'
apply plugin: 'walle'
// 多渠道使用walle示例（注：多渠道使用）
//apply from: 'multiple-channel.gradle'

Properties keyProps = new Properties()
keyProps.load(project.rootProject.file('./keystores/release.keystore.properties').newDataInputStream())

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.testanim.wujing.testbugly"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 7
        versionName "1.0.7"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "1"
        multiDexEnabled true
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

    }

    signingConfigs {
        String proDir = projectDir
        debug {

        }
        release {
            keyAlias keyProps['keyAlias']
            keyPassword keyProps['keyPassword']
            storePassword keyProps['storePassword']
            storeFile file(proDir + keyProps['storeFile'])
        }
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
    }
    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    api 'com.orhanobut:logger:1.15'

    api 'com.meituan.android.walle:library:1.1.6'
    // 多dex配置
    api "com.android.support:multidex:1.0.2"
//    //注释掉原有bugly的仓库
//    //compile 'com.tencent.bugly:crashreport:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.3.2
//    api 'com.tencent.bugly:crashreport_upgrade:latest.release'
////其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.0
//    api 'com.tencent.bugly:nativecrashreport:latest.release'
//    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0


    //注释掉原有bugly的仓库
    //compile 'com.tencent.bugly:crashreport:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.3.4
    compile 'com.tencent.bugly:crashreport_upgrade:1.3.6'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    compile 'com.tencent.tinker:tinker-android-lib:1.9.9'
    compile 'com.tencent.bugly:nativecrashreport:latest.release' //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0


}
walle {
    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}-${flavorName}.apk'
    //configFile与channelFile两者必须存在一个，否则无法生成渠道包。两者都存在时优先执行configFile
    channelFile = new File("${project.getProjectDir()}/channel")
    //configFile = new File("${project.getProjectDir()}/config.json")
}

